#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (476.0.0.508.4)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root" (
    customData = {
        float3 rotationEulerHint = (0, 1.5707963, 0)
    }
)
{
    quatf xformOp:orient = (0.7085214, 0, 0.70568925, 0)
    float3 xformOp:translate = (0, 0, 0)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

    def "Scene" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 3.1415927, 0)
        }
        prepend references = @Scene.usdz@
    )
    {
        quatf xformOp:orient = (-4.371139e-8, 0, 1, 0)
        float3 xformOp:scale = (0.1, 0.15, 0.15)
        float3 xformOp:translate = (-2.8962262, 3.5390258e-7, 0.446507)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "AnimationLibrary"
        {
            uniform token info:id = "RealityKit.AnimationLibrary"

            def RealityKitClipDefinition "Clip_default_subtree_animation"
            {
                uniform string[] clipNames = ["Clip", "Clip 1"]
                uniform string sourceAnimationName = "default subtree animation"
                uniform double[] startTimes = [0, 1.6396111111111111]
            }
        }

        over "ip"
        {
            float3 xformOp:translate = (-26.096981, 2.266221e-7, 2.9278247)
        }
    }

    def RealityKitTimeline "Timeline"
    {
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Animation"
            {
                string actionKind = "animation"
                string animation = "Clip"
                int blendLayer = 500
                double duration = 1.6396111111111111
                uniform token info:id = "9B4FE83F-7E88-407A-92D6-110CC7C83C66"
                double loopCount = 0
                bool separateAnimatedValue = 1
                double startTime = 0
                rel target = </Root/Scene>

                def RealityKitStruct "handoffType"
                {
                }
            }
        }
    }

    def RealityKitComponent "RCP_BehaviorsContainer"
    {
        rel behaviors = [
            </Root/OnTap>,
            </Root/OnAddedToScene>,
        ]
        uniform token info:id = "RCP.BehaviorsContainer"
    }

    def Preliminary_Behavior "OnTap"
    {
        rel actions = </Root/OnTap/Action>
        uniform bool exclusive
        rel triggers = </Root/OnTap/Trigger>

        def Preliminary_Trigger "Trigger"
        {
            rel affectedObjects = </Root>
            token info:id = "TapGesture"
        }

        def Preliminary_Action "Action"
        {
            rel affectedObjects = </Root>
            rel animationLibraryKey = </Root/Timeline>
            rel animationLibraryKeyOverrideKey = </Root/OnTap/Trigger>
            token info:id = "PlayTimeline"
            int loops = 0
            int performCount = 1
            token type = "serial"
        }
    }

    def RealityKitComponent "Collider"
    {
        uint group = 1
        uniform token info:id = "RealityKit.Collider"
        uint mask = 4294967295
        token type = "Default"

        def RealityKitStruct "Shape"
        {
            float3 extent = (0.14523768, 0.15980132, 0.16820924)
            token shapeType = "Box"

            def RealityKitStruct "pose"
            {
                float3 position = (-0.05148196, 0.000028185546, 0.0076991245)
            }
        }
    }

    def RealityKitComponent "InputTarget"
    {
        uniform token info:id = "RealityKit.InputTarget"
    }

    def Preliminary_Behavior "OnAddedToScene"
    {
        rel actions = </Root/OnAddedToScene/Action>
        uniform bool exclusive
        rel triggers = </Root/OnAddedToScene/Trigger>

        def Preliminary_Trigger "Trigger"
        {
            rel affectedObjects = </Root>
            token info:id = "SceneTransition"
        }

        def Preliminary_Action "Action"
        {
            rel affectedObjects = </Root>
            rel animationLibraryKey = </Root/Timeline>
            rel animationLibraryKeyOverrideKey = </Root/OnAddedToScene/Trigger>
            token info:id = "PlayTimeline"
            int loops = 0
            int performCount = 1
            token type = "serial"
        }
    }

    def Cube "Cube" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/Cube/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (0.7085214, 0, -0.70568925, 0)
        float3 xformOp:scale = (4, 2.5, 4)
        float3 xformOp:translate = (-0.17822702, 0.20189615, 0.0007138491)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            prepend token outputs:surface.connect = </Root/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoatRoughness = 0
                color3f inputs:diffuseColor = (1, 1, 1)
                color3f inputs:emissiveColor = (1, 1, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:ior = 1.5
                normal3f inputs:normal = (0, 0, 0)
                float inputs:opacity = 0
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }
    }
}


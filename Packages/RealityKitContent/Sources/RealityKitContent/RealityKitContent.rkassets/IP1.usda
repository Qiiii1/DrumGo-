#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (476.0.0.508.4)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    def "IP2" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 3.1464083, 0)
        }
        prepend references = @IP2.usdz@
    )
    {
        quatf xformOp:orient = (-0.0024080689, 0, 0.999997, 0)
        float3 xformOp:scale = (0.2, 0.2, 0.2)
        float3 xformOp:translate = (0.00035937503, 9.685755e-8, 0.1246167)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "AnimationLibrary"
        {
            uniform token info:id = "RealityKit.AnimationLibrary"

            def RealityKitClipDefinition "Clip_default_subtree_animation"
            {
                uniform string[] clipNames = ["Clip", "Clip 1"]
                uniform string sourceAnimationName = "default subtree animation"
                uniform double[] startTimes = [0, 1.5261111111111112]
            }
        }

        def RealityKitComponent "RCP_BehaviorsContainer"
        {
            rel behaviors = [
                </Root/IP2/OnTap>,
                </Root/IP2/OnAddedToScene>,
            ]
            uniform token info:id = "RCP.BehaviorsContainer"
        }

        def Preliminary_Behavior "OnTap"
        {
            rel actions = </Root/IP2/OnTap/Action>
            uniform bool exclusive
            rel triggers = </Root/IP2/OnTap/Trigger>

            def Preliminary_Trigger "Trigger"
            {
                rel affectedObjects = </Root/IP2>
                token info:id = "TapGesture"
            }

            def Preliminary_Action "Action"
            {
                rel affectedObjects = </Root>
                rel animationLibraryKey = </Root/Timeline>
                rel animationLibraryKeyOverrideKey = </Root/IP2/OnTap/Trigger>
                token info:id = "PlayTimeline"
                int loops = 0
                int performCount = 1
                token type = "serial"
            }
        }

        over "ip22_1" (
            customData = {
                float3 rotationEulerHint = (-1.5707963, 1.5707963, 0)
            }
        )
        {
            quatf xformOp:orient = (0.49933642, -0.4993364, 0.5006626, 0.5006627)
            float3 xformOp:translate = (-0.09925233, 1.2107196e-7, 0.11451622)
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.5783203, 0.19969337, 0.5500759)
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                    float3 position = (-0.0994854, 6.7800283e-7, 0.03362757)
                }
            }
        }

        def Preliminary_Behavior "OnAddedToScene"
        {
            rel actions = </Root/IP2/OnAddedToScene/Action>
            uniform bool exclusive
            rel triggers = </Root/IP2/OnAddedToScene/Trigger>

            def Preliminary_Trigger "Trigger"
            {
                rel affectedObjects = </Root/IP2>
                token info:id = "SceneTransition"
            }

            def Preliminary_Action "Action"
            {
                rel affectedObjects = </Root>
                rel animationLibraryKey = </Root/Timeline>
                rel animationLibraryKeyOverrideKey = </Root/IP2/OnAddedToScene/Trigger>
                token info:id = "PlayTimeline"
                int loops = 0
                int performCount = 1
                token type = "serial"
            }
        }
    }

    def RealityKitTimeline "Timeline"
    {
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Animation"
            {
                string actionKind = "animation"
                string animation = "Clip"
                int blendLayer = 500
                double duration = 1.5261111111111112
                uniform token info:id = "95C49A3E-A28C-4483-A032-ECC79D244896"
                double loopCount = 0
                bool separateAnimatedValue = 1
                double startTime = 0
                rel target = </Root/IP2>

                def RealityKitStruct "handoffType"
                {
                }
            }
        }
    }

    def Cube "Cube" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/Cube/DefaultMaterial>
        double size = 0.2
        float2 ui:nodegraph:node:pos = (20, 20)
        int ui:nodegraph:node:stackingOrder = 1
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (3.9999993, 2.4999995, 3.9999993)
        float3 xformOp:translate = (-8.871632e-9, 0.20189613, 0.17822844)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoatRoughness = 0
                color3f inputs:diffuseColor = (1, 1, 1)
                color3f inputs:emissiveColor = (1, 1, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:ior = 1.5
                normal3f inputs:normal = (0, 0, 0)
                float inputs:opacity = 0
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }
    }
}

